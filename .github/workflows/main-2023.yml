name: Automatic Update (2023)

on:
  push:
    branches: master
  schedule:
  - cron: "0 */5 * * *"

jobs:
  setup-build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest release tag
        id: get_latest_release_tag
        run: |
          LATEST=$(curl -s https://api.github.com/repos/tModLoader/tModLoader/releases | jq -r "[.[] | select(.tag_name | contains(\"2023\")) | select(.prerelease == false)] | max_by(.created_at) | .tag_name | sub(\"^v\";\"\")")
          echo "Latest 2023 release is ${LATEST}"
          echo "latest_tag=$LATEST" >> "$GITHUB_OUTPUT"
      
      - name: Check if version already exists
        run: |
          CHECK=$(curl -s "https://hub.docker.com/v2/repositories/passivelemon/tmodloader1.4-docker/tags/${{ steps.get_latest_release_tag.outputs.latest_tag }}")
          echo $CHECK
          if echo "${CHECK}" | jq -e ".digest" > /dev/null; then
            echo "Version ${{ steps.get_latest_release_tag.outputs.latest_tag }} already exists. Stopping..."
            exit 1
          fi
          echo "Version ${{ steps.get_latest_release_tag.outputs.latest_tag }} does not already exist. Continuing..."

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker & GHCR
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          echo "${{ secrets.GHCR_PASSWORD }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      - name: Build the image
        run: |
          docker buildx create --name mainbuilder --driver docker-container --platform linux/amd64 --use
          
          docker buildx build --push \
            --build-arg VERSION=${{ steps.get_latest_release_tag.outputs.latest_tag }} \
            --provenance=false \
            --platform linux/amd64 \
            --tag ${{ secrets.DOCKER_USERNAME }}/tmodloader1.4-docker:${{ steps.get_latest_release_tag.outputs.latest_tag }} \
            --tag ${{ secrets.DOCKER_USERNAME }}/tmodloader1.4-docker:latest-2023 \
            --tag ${{ secrets.DOCKER_USERNAME }}/tmodloader1.4-docker:latest \
            --tag ghcr.io/${{ secrets.GHCR_USERNAME }}/tmodloader1.4-docker:${{ steps.get_latest_release_tag.outputs.latest_tag }} \
            --tag ghcr.io/${{ secrets.GHCR_USERNAME }}/tmodloader1.4-docker:latest-2023-pre \
            --tag ghcr.io/${{ secrets.GHCR_USERNAME }}/tmodloader1.4-docker:latest \
            .
